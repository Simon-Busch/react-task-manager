[{"/Users/simonbusch/code/Projets perso/react-task-manager/src/reportWebVitals.js":"1","/Users/simonbusch/code/Projets perso/react-task-manager/src/index.js":"2","/Users/simonbusch/code/Projets perso/react-task-manager/src/Containers/App.js":"3","/Users/simonbusch/code/Projets perso/react-task-manager/src/Tasks/TasksInput.js":"4","/Users/simonbusch/code/Projets perso/react-task-manager/src/Tasks/TasksOutput.js":"5"},{"size":362,"mtime":1608625450942,"results":"6","hashOfConfig":"7"},{"size":556,"mtime":1608793349189,"results":"8","hashOfConfig":"7"},{"size":2600,"mtime":1608816750728,"results":"9","hashOfConfig":"7"},{"size":1154,"mtime":1608816521588,"results":"10","hashOfConfig":"7"},{"size":324,"mtime":1608813360049,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1iaadgr",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/simonbusch/code/Projets perso/react-task-manager/src/reportWebVitals.js",[],"/Users/simonbusch/code/Projets perso/react-task-manager/src/index.js",[],"/Users/simonbusch/code/Projets perso/react-task-manager/src/Containers/App.js",["24"],"import './App.css';\nimport React, { Component, Fragment } from 'react'\nimport TasksInput from '../Tasks/TasksInput'\nimport TasksOutput from '../Tasks/TasksOutput'\nimport '../Tasks/TasksInput.css' \n\nclass App extends Component {\n  state={\n\n    tasks: [\n      {\n        id: 1,\n        taskName:'Laundry',\n        taskDescription: 'wash clothes carefuly',\n        isDone: true\n      },\n      {\n        id:2,\n        taskName:'Shopping',\n        taskDescription: 'Buy christmas presents',\n        isDone: false\n      },\n      {\n        id:3,\n        taskName:'Code',\n        taskDescription: 'Learn react',\n        isDone: false\n      }\n    ]\n  }\n\n  newTaskHandler (props) {\n    const tasks = {...this.state };\n    const newTasksList = tasks.push[{\n        // id:{ Date.now() }, \n        taskName: props.name, \n        taskDescription:props.description, \n        isDone:false}]\n    this.state({\n      newTasksList\n    })\n  }\n\n  handleChange = (e) => {   \n    console.log( e.target.value)\n  };\n\n  handleSubmit = (e) => {\n    console.log('coucou')\n  }\n\n  render () {\n    let tasksDisplay = (\n      this.state.tasks.map((task, index) => {\n        return (<TasksOutput\n          key={index}\n          name={task.taskName}\n          description={task.taskDescription}\n          isDone={task.isDone}\n      />)\n      })\n    )\n\n    return (\n      <div className=\"App\">\n        <h1>Welcome to the task manager</h1>\n        <h3>Please input your task</h3>\n        { tasksDisplay }\n\n        {/* <TasksInput onSubmit={this.newTaskHandler} /> */}\n        <Fragment>\n          <div className=\"input-container\">\n            <form className=\"flex-container\"\n                  onSubmit={this.handleSubmit} >\n\n                <div className=\"small-container-input\">\n                  <input type=\"text\" \n                        name=\"name\"\n                        placeholder=\"input task name\"\n                        onChange={this.handleChange}\n                  />\n                </div>\n\n                <div className=\"small-container-input\">\n                  <textarea type=\"text\"  \n                        name=\"description\" \n                        rows=\"5\"\n                        columns=\"30\"\n                        placeholder=\"input task description\"\n                        onChange={this.handleChange}\n                  />\n                </div>\n\n                <div className=\"small-container-input\">\n                  <button className=\"button-submit-input\"> Submit </button>\n                </div>\n            </form>\n          </div>\n        </Fragment>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/simonbusch/code/Projets perso/react-task-manager/src/Tasks/TasksInput.js",["25","26"],"import React from 'react'\nimport './TasksInput.css' \n\nconst TasksInput = ({ handleSubmit }) =>   {\n  const [input, setInput] = useState('')\n\n  const handleChange = (e) => {   \n    console.log( e.target.value)\n  };\n  \n  return (\n    <div className=\"input-container\">\n      <form className=\"flex-container\"\n            onSubmit={handleSubmit} >\n\n          <div className=\"small-container-input\">\n            <input type=\"text\" \n                  name=\"name\"\n                  placeholder=\"task name\"\n                  // value={taskName}\n                  onChange={this.input}\n            />\n          </div>\n\n          <div className=\"small-container-input\">\n            <textarea type=\"text\"  \n                  name=\"description\" \n                  rows=\"5\"\n                  columns=\"30\"\n                  placeholder=\"Task description\"\n                  onChange={handleChange}\n                  // value={taskDescription}\n            />\n          </div>\n\n          <div className=\"small-container-input\">\n            <button className=\"button-submit-input\"> Submit </button>\n          </div>\n      </form>\n    </div>\n  )\n}\n\nexport default TasksInput","/Users/simonbusch/code/Projets perso/react-task-manager/src/Tasks/TasksOutput.js",[],{"ruleId":"27","severity":1,"message":"28","line":3,"column":8,"nodeType":"29","messageId":"30","endLine":3,"endColumn":18},{"ruleId":"27","severity":1,"message":"31","line":5,"column":17,"nodeType":"29","messageId":"30","endLine":5,"endColumn":25},{"ruleId":"32","severity":2,"message":"33","line":5,"column":29,"nodeType":"29","messageId":"34","endLine":5,"endColumn":37},"no-unused-vars","'TasksInput' is defined but never used.","Identifier","unusedVar","'setInput' is assigned a value but never used.","no-undef","'useState' is not defined.","undef"]